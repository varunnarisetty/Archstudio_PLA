package edu.uci.isr.xarch;

import java.util.Iterator;

public abstract class FilterIterator implements Iterator {
	
	private static final Object UNINIT = new Object();
	
	private Iterator i;
	private Object next;
	
	public FilterIterator(Iterator i) {
		this.i = i;
		this.next = UNINIT;
	}
	
	public boolean hasNext() {
		if(next == UNINIT)
			advance();
		return next != null;
	}
	
	public Object next() {
		if(next == UNINIT)
			advance();
		Object o = next;
		advance();
		return o;
	}
	
	public void remove() {
		throw new UnsupportedOperationException(); 
	}
	
	private void advance(){
		while(i.hasNext()){
			next = i.next();
			if(include(next))
				return;
		}
		next = null;
	}
	
	public abstract boolean include(Object o);
}
