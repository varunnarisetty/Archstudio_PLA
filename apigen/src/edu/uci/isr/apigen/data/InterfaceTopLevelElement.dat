	/**
	 * Create a top-level element of type <code>$$(ELEMENT_TYPE_INTERFACE_NAME)</code>.
	 * This function should be used in lieu of <code>create$$(ELEMENT_TYPE_CAPPED)</code>
	 * if the element is to be added as a sub-object of <code>IXArch</code>.
	 * @return new $$(ELEMENT_TYPE_INTERFACE_NAME) suitable for adding
	 * as a child of xArch.
	 */
	public $$(ELEMENT_TYPE_INTERFACE_NAME) create$$(ELEMENT_TYPE_CAPPED)Element();

	/**
	 * Gets the $$(ELEMENT_TYPE_INTERFACE_NAME) child from the given <code>IXArch</code>
	 * element.  If there are multiple matching children, this returns the first one.
	 * @param xArch <code>IXArch</code> object from which to get the child.
	 * @return <code>$$(ELEMENT_TYPE_INTERFACE_NAME)</code> that is the child
	 * of <code>xArch</code> or <code>null</code> if no such object exists.
	 */
	public $$(ELEMENT_TYPE_INTERFACE_NAME) get$$(ELEMENT_TYPE_CAPPED)(IXArch xArch);

	/**
	 * Gets all the $$(ELEMENT_TYPE_INTERFACE_NAME) children from the given 
	 * <code>IXArch</code> element.
	 * @param xArch <code>IXArch</code> object from which to get the children.
	 * @return Collection of <code>$$(ELEMENT_TYPE_INTERFACE_NAME)</code> that are 	
	 * the children of <code>xArch</code> or an empty collection if no such object exists.
	 */
	public Collection getAll$$(ELEMENT_TYPE_CAPPED)s(IXArch xArch);

